name: Create and publish container images

on:
  workflow_call:
    inputs:
      is_latest:
        description: Update the latest tag with the new image
        required: false
        type: boolean
        default: false
      version:
        description: The version
        required: true
        type: string

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: "test 1"
        run: echo "this is a test"
      
      - name: "test only if latest"
        if: ${{ inputs.is_latest }}
        run: echo "this needs to run only for latest"

      - name: Build image x86_64
        uses: docker/build-push-action@v3
        with:
          build-args: |
            VERSION=${{ inputs.version }}
          tags: |
            lucagsd/test-gha-pr:x86_64-${{ inputs.version }}
          outputs: type=docker,dest=/tmp/test-gha-pr-x86_64.tar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Build image arm64
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm64
          build-args: |
            VERSION=${{ inputs.version }}
          tags: |
            lucagsd/test-gha-pr:aarch64-${{ inputs.version }}
          outputs: type=docker,dest=/tmp/test-gha-pr-aarch64.tar

      - name: Upload images tarballs
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: /tmp/test-gha-pr*.tar

  publish-images:
    runs-on: ubuntu-latest
    needs: [build-images]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download images tarballs
        uses: actions/download-artifact@v3
        with:
          name: images
          path: /tmp/images

      - name: Load all images
        run: |
          for img in /tmp/images/*.tar; do docker load --input $img; done

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Create and push manifest
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: lucagsd/test-gha-pr:${{ inputs.version }}
          images: lucagsd/test-gha-pr:aarch64-${{ inputs.version }},lucagsd/test-gha-pr:x86_64-${{ inputs.version }}
          push: true
